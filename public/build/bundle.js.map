{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.2' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n\n\t// Size //\n\tlet width = 0;\n\tlet height = 0;\n\n\t// Border-radius //\n\tlet borderRadius = 0;\n\tlet borderRadiusPer = 0;\n\tlet toggleLabel = \"Toggle / %\";\n\n\t// Border-radius sides //\n\tlet bdSideRadiusTopLeft = 0;\n\tlet bdSideRadiusTopRight = 0;\n\tlet bdSideRadiusBottomLeft = 0;\n\tlet bdSideRadiusBottomRight = 0;\n\n\tlet bdSideRadiusPerTopLeft = 0;\n\tlet bdSideRadiusPerTopRight = 0;\n\tlet bdSideRadiusPerBottomLeft = 0;\n\tlet bdSideRadiusPerBottomRight = 0;\n\n\t// Border //\n\tlet border = 0;\n\n\t// Color //\n\tlet color = '#000000';\n\tlet colorBorder = '#ff73b9';\n\n\t// Box-shadow //\n\tlet hShadow = 0;\n\tlet vShadow = 0;\n\tlet blurShadow = 0;\n\tlet spreadShadow = 0;\n\tlet colorShadow = '#000000';\n\n\tlet hShadowIn = 0;\n\tlet vShadowIn = 0;\n\tlet blurShadowIn = 0;\n\tlet spreadShadowIn = 0;\n\tlet colorShadowIn = '#000000';\n\n\tlet active = false;\n\tlet activeNav = false;\n\tlet disabled = true;\n\n\tlet openSize= true;\n\tlet openBorder = false;\n\tlet openBorderRadius = false;\n\tlet openBorderRadiusPart = false;\n\tlet openColor = true;\n\tlet openShadow = false;\n\tlet openShadowInset = false;\n\n\t// Border-radius Function //\n\tfunction borderLogic(value){\n\t\tif(borderRadius > 0 || borderRadiusPer > 0){\n\t\t\tbdSideRadiusTopLeft = 0;\n\t\t\tbdSideRadiusTopRight = 0;\n\t\t\tbdSideRadiusBottomLeft = 0;\n\t\t\tbdSideRadiusBottomRight = 0;\n\n\t\t\tbdSideRadiusPerTopLeft = 0;\n\t\t\tbdSideRadiusPerTopRight = 0;\n\t\t\tbdSideRadiusPerBottomLeft = 0;\n\t\t\tbdSideRadiusPerBottomRight = 0;\n\t\t}\n\t}\n\n\t// Toggle //\n\tfunction toggleRadius(){\n\t\tif(active === false){\n\t\t\tactive = true;\n\n\t\t\tborderRadius = 0;\n\t\t\tbdSideRadiusTopLeft = 0;\n\t\t\tbdSideRadiusTopRight = 0;\n\t\t\tbdSideRadiusBottomLeft = 0;\n\t\t\tbdSideRadiusBottomRight = 0;\n\n\t\t\ttoggleLabel = \"Toggle / px\"\n\t\t}\n\t\telse{\n\t\t\tactive = false;\n\n\t\t\tborderRadiusPer = 0;\n\t\t\tbdSideRadiusPerTopLeft = 0;\n\t\t\tbdSideRadiusPerTopRight = 0;\n\t\t\tbdSideRadiusPerBottomLeft = 0;\n\t\t\tbdSideRadiusPerBottomRight = 0;\n\n\t\t\ttoggleLabel = \"Toggle / %\"\n\t\t}\n\t}\n\n\t// Reset //\n\tfunction reset(){\n\t\twidth = 0;\n\t\theight = 0;\n\t\tborderRadius = 0;\n\t\tborderRadiusPer = 0;\n\t\tbdSideRadiusTopLeft = 0;\n\t\tbdSideRadiusTopRight = 0;\n\t\tbdSideRadiusBottomLeft = 0;\n\t\tbdSideRadiusBottomRight = 0;\n\t\tbdSideRadiusPerTopLeft = 0;\n\t\tbdSideRadiusPerTopRight = 0;\n\t\tbdSideRadiusPerBottomLeft = 0;\n\t\tbdSideRadiusPerBottomRight = 0;\n\t\tborder = 0;\n\t\tcolor = '#000000';\n\t\tcolorBorder = '#ff73b9';\n\t\thShadow = 0;\n\t\tvShadow = 0;\n\t\tblurShadow = 0;\n\t\tspreadShadow = 0;\n\t\tcolorShadow = '#000000';\n\t\thShadowIn = 0;\n\t\tvShadowIn = 0;\n\t\tblurShadowIn = 0;\n\t\tspreadShadowIn = 0;\n\t\tcolorShadowIn = '#000000';\n\t}\n\n\t// Nav //\n\tfunction navToggle(){\n\t\tif(activeNav === false){\n\t\t\tactiveNav = true;\n\t\t}\n\t\telse{\n\t\t\tactiveNav = false\n\t\t}\n\t}\n\n\tconst nav = document.getElementById(\"nav\");\n\tconst toggleNav = document.getElementById(\"toggleNav\");\n\n\tconst sizeMenu = document.getElementById(\"sizeMenu\");\n\tconst borderMenu = document.getElementById(\"borderMenu\");\n\tconst radiusMenu = document.getElementById(\"radiusMenu\");\n\tconst radiusPartMenu = document.getElementById(\"radiusPartMenu\");\n\tconst colorMenu = document.getElementById(\"colorMenu\");\n\tconst boxShadowMenu = document.getElementById(\"boxShadowMenu\");\n\tconst boxShadowInsetMenu = document.getElementById(\"boxShadowInsetMenu\");\n\n\tdocument.onclick = (e) => {\n\t\tif(e.target.id !== 'nav' && e.target.id !== 'toggleNav'\n\t\t\t&& e.target.id !== 'sizeMenu' && e.target.id !== 'borderMenu'\n\t\t\t&& e.target.id !== 'radiusMenu' && e.target.id !== 'radiusPartMenu'\n\t\t\t&& e.target.id !== 'colorMenu' && e.target.id !== 'boxShadowMenu'\n\t\t\t&& e.target.id !== 'boxShadowInsetMenu' && e.target.id !== 'itemsNav'){\n\t\t\tactiveNav = false;\n\t\t}\n\t}\n\n</script>\n\n<head>\n\t<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons+Outlined\" rel=\"stylesheet\">\n</head>\n\n<!-- TODO 3\n\tAdd box-shadow: {h}px {v}px {blur}px {spread}px {color};\n\t\tand \t \tinset {h}px {v}px {blur}px {spread}px {color};\n\n\t TODO 4\n\t Fix bug box-shadow\n\n2/12/21 - 14:22\n-->\n\n<nav class=\"nav\">\n\t<div class=\"toggle\" id=\"toggleNav\" class:active={activeNav} on:click=\"{navToggle}\"></div>\n\t<div class=\"options\" id=\"nav\" class:active={activeNav}>\n\t\t<div class=\"navItems\">\n\t\t\t<div class=\"navMenu menu-1\">\n\t\t\t\t<label for=\"sizeMenu\">Size</label>\n\t\t\t\t<input type=\"checkbox\" id=\"sizeMenu\" class=\"checkBox\" bind:checked={openSize}>\n\t\t\t</div>\n\t\t\t<div class=\"navMenu menu-2\">\n\t\t\t\t<label for=\"borderMenu\">Border</label>\n\t\t\t\t<input type=\"checkbox\" id=\"borderMenu\" class=\"checkBox\" bind:checked={openBorder}>\n\t\t\t</div>\n\t\t\t<div class=\"navMenu menu-3\">\n\t\t\t\t<label for=\"radiusMenu\">Border-raidus</label>\n\t\t\t\t<input type=\"checkbox\" id=\"radiusMenu\" class=\"checkBox\" bind:checked={openBorderRadius}>\n\t\t\t</div>\n\t\t\t<div class=\"navMenu menu-4\">\n\t\t\t\t<label for=\"radiusPartMenu\">Border-raidus (part)</label>\n\t\t\t\t<input type=\"checkbox\" id=\"radiusPartMenu\" class=\"checkBox\" bind:checked={openBorderRadiusPart}>\n\t\t\t</div>\n\t\t\t<div class=\"navMenu menu-5\">\n\t\t\t\t<label for=\"colorMenu\">Color</label>\n\t\t\t\t<input type=\"checkbox\" id=\"colorMenu\" class=\"checkBox\" bind:checked={openColor}>\n\t\t\t</div>\n\t\t\t<div class=\"navMenu menu-6\">\n\t\t\t\t<label for=\"boxShadowMenu\">Box-shadow</label>\n\t\t\t\t<input type=\"checkbox\" id=\"boxShadowMenu\" class=\"checkBox\" bind:checked={openShadow}>\n\t\t\t</div>\n\t\t\t<div class=\"navMenu menu-7\">\n\t\t\t\t<label for=\"boxShadowInsetMenu\">Box-shadow (inset)</label>\n\t\t\t\t<input type=\"checkbox\" id=\"boxShadowInsetMenu\" class=\"checkBox\" bind:checked={openShadowInset}>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</nav>\n\n<main>\n\t<h1>Make object</h1>\n\t<div class=\"make-box\">\n\t\t<!-- Side Width / Height -->\n\t\t<div class:open={!openSize}>\n\t\t\t<div class=\"value-custom size-grid\" id=\"size-value\">\n\t\t\t\t<lable for=\"width-value\" id=\"w-label\">width - px</lable>\n\t\t\t\t<div class=\"value-custom\" id=\"width-value\">\n\t\t\t\t\t<input class=\"valueShow\" type=\"number\" bind:value={width} min=0 max=500>\n\t\t\t\t\t<input class=\"slider\" type=\"range\" bind:value={width} min=0 max=500>\n\t\t\t\t</div>\n\n\t\t\t\t<lable for=\"height-value\" id=\"h-label\">height - px</lable>\n\t\t\t\t<div class=\"value-custom\" id=\"height-value\">\n\t\t\t\t\t<input class=\"valueShow\" type=\"number\" bind:value={height} min=0 max=500>\n\t\t\t\t\t<input class=\"slider\" type=\"range\" bind:value={height} min=0 max=500>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\n\t\t<!-- border -->\n\t\t<div class:open={!openBorder}>\n\t\t\t<div class=\"value-custom border-grid\" id=\"border-value\">\n\t\t\t\t<lable for=\"border-value\" id=\"border-label\">border</lable>\n\t\t\t\t<div class=\"value-custom\" id=\"border-custom\">\n\t\t\t\t\t<input class=\"valueShow\" type=\"number\" bind:value={border} min=0 max={width >= height ? height/2 : width/2}>\n\t\t\t\t\t<input class=\"slider\" type=\"range\" bind:value={border} min=0 max={width >= height ? height/2 : width/2}>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<!-- Border radius all side -->\n\t\t<div class:open={!openBorderRadius}>\n\t\t\t<div id=\"border-radius\">\n\t\t\t\t<lable for=\"toggleBtn\" id=\"border-radius-label\">border-radius</lable>\n\t\t\t\t<button on:click=\"{toggleRadius}\" class=\"btn\" id=\"toggleBtn\">{toggleLabel}</button>\n\t\t\t\t<div class=\"value-custom\" id=\"border-radius-value\">\t\t\n\t\t\t\t\t<div class:active={active} class=\"border-radius-items\" id=\"br-px\">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\tbind:value={borderRadius} \n\t\t\t\t\t\t\t\ton:input=\"{e => borderLogic(e.target.value)}\" \n\t\t\t\t\t\t\t\tmin=0 max=250>\n\t\t\t\t\t\t\t<lable for=\"height-value\">px</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\tbind:value={borderRadius} \n\t\t\t\t\t\t\t\ton:input=\"{e => borderLogic(e.target.value)}\" \n\t\t\t\t\t\t\t\tmin=0 max=250>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class:active={active} class=\"border-radius-items\" id=\"br-per\">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\tbind:value={borderRadiusPer} \n\t\t\t\t\t\t\t\ton:input=\"{e => borderLogic(e.target.value)}\" \n\t\t\t\t\t\t\t\tmin=0 max=100>\n\t\t\t\t\t\t\t<lable for=\"height-value\">%</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\tbind:value={borderRadiusPer} \n\t\t\t\t\t\t\t\ton:input=\"{e => borderLogic(e.target.value)}\" \n\t\t\t\t\t\t\t\tmin=0 max=100>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<!-- Border radius some side -->\n\t\t<div class:open={!openBorderRadiusPart}>\n\t\t\t<div class=\"value-custom\" id=\"border-radius-part\">\n\t\t\t\t<div class:active={active} class=\"br-sides-toggle\" id=\"br-sides-px\">\n\t\t\t\t\t<!-- px -->\n\t\t\t\t\t<div class=\"value-custom br-sides-grid\" id=\"border-radius-sides-px\">\n\t\t\t\t\t\t<!-- Top-Left -->\n\t\t\t\t\t\t<lable for=\"br-t-l\" id=\"brTL-label\">Top-left</lable>\n\t\t\t\t\t\t<div class:active={active} class=\"border-radius-sides\" id=\"br-t-l\">\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\t\tbind:value={bdSideRadiusTopLeft} \n\t\t\t\t\t\t\t\t\tdisabled={borderRadius > 0 ? disabled : !disabled}\n\t\t\t\t\t\t\t\t\tmin=0 max={borderRadius > 0 ? 0 : 255}>\n\t\t\t\t\t\t\t<lable for=\"height-value\">px</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\t\tbind:value={bdSideRadiusTopLeft} \n\t\t\t\t\t\t\t\t\tdisabled={borderRadius > 0 ? disabled : !disabled}\n\t\t\t\t\t\t\t\t\tmin=0 max={borderRadius > 0 ? 0 : 255}>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<!-- Top-Right -->\n\t\t\t\t\t\t<lable for=\"br-t-l\" id=\"brTR-label\">Top-right</lable>\n\t\t\t\t\t\t<div class:active={active} class=\"border-radius-sides\" id=\"br-t-r\">\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\t\tbind:value={bdSideRadiusTopRight} \n\t\t\t\t\t\t\t\t\tdisabled={borderRadius > 0 ? disabled : !disabled}\n\t\t\t\t\t\t\t\t\tmin=0 max={borderRadius > 0 ? 0 : 255}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<lable for=\"height-value\">px</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\t\tbind:value={bdSideRadiusTopRight} \n\t\t\t\t\t\t\t\t\tdisabled={borderRadius > 0 ? disabled : !disabled}\n\t\t\t\t\t\t\t\t\tmin=0 max={borderRadius > 0 ? 0 : 255}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<!-- Bottom-Left -->\n\t\t\t\t\t\t<lable for=\"br-t-l\" id=\"brBL-label\">Bottom-Left</lable>\n\t\t\t\t\t\t<div class:active={active} class=\"border-radius-sides\" id=\"br-b-l\">\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\t\tbind:value={bdSideRadiusBottomLeft} \n\t\t\t\t\t\t\t\t\tdisabled={borderRadius > 0 ? disabled : !disabled}\n\t\t\t\t\t\t\t\t\tmin=0 max={borderRadius > 0 ? 0 : 255}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<lable for=\"height-value\">px</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\t\tbind:value={bdSideRadiusBottomLeft} \n\t\t\t\t\t\t\t\t\tdisabled={borderRadius > 0 ? disabled : !disabled}\n\t\t\t\t\t\t\t\t\tmin=0 max={borderRadius > 0 ? 0 : 255}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<!-- Bottom-Right -->\n\t\t\t\t\t\t<lable for=\"br-t-l\" id=\"brBR-label\">Bottom-right</lable>\n\t\t\t\t\t\t<div class:active={active} class=\"border-radius-sides\" id=\"br-b-r\">\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\t\tbind:value={bdSideRadiusBottomRight} \n\t\t\t\t\t\t\t\t\tdisabled={borderRadius > 0 ? disabled : !disabled}\n\t\t\t\t\t\t\t\t\tmin=0 max={borderRadius > 0 ? 0 : 255}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<lable for=\"height-value\">px</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\t\tbind:value={bdSideRadiusBottomRight} \n\t\t\t\t\t\t\t\t\tdisabled={borderRadius > 0 ? disabled : !disabled}\n\t\t\t\t\t\t\t\t\tmin=0 max={borderRadius > 0 ? 0 : 255}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- percent -->\n\t\t\t\t<div class:active={active} class=\"br-sides-toggle\" id=\"br-sides-per\">\n\t\t\t\t\t<div class=\"value-custom br-sides-grid\" id=\"border-radius-sides-per\">\n\t\t\t\t\t\t<!-- Top-Left -->\n\t\t\t\t\t\t<lable for=\"br-t-l\" id=\"brTL-label\">Top-left</lable>\n\t\t\t\t\t\t<div class:active={active} class=\"border-radius-sides\" id=\"br-t-l\">\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\t\tbind:value={bdSideRadiusPerTopLeft} \n\t\t\t\t\t\t\t\t\tdisabled={borderRadiusPer > 0 ? disabled : !disabled}\n\t\t\t\t\t\t\t\t\tmin=0 max={borderRadiusPer > 0 ? 0 : 100}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<lable for=\"height-value\">%</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\t\tbind:value={bdSideRadiusPerTopLeft} \n\t\t\t\t\t\t\t\t\tdisabled={borderRadiusPer > 0 ? disabled : !disabled}\n\t\t\t\t\t\t\t\t\tmin=0 max={borderRadiusPer > 0 ? 0 : 100}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<!-- Top-Right -->\n\t\t\t\t\t\t<lable for=\"br-t-l\" id=\"brTR-label\">Top-right</lable>\n\t\t\t\t\t\t<div class:active={active} class=\"border-radius-sides\" id=\"br-t-r\">\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\t\tbind:value={bdSideRadiusPerTopRight} \n\t\t\t\t\t\t\t\t\tdisabled={borderRadiusPer > 0 ? disabled : !disabled}\n\t\t\t\t\t\t\t\t\tmin=0 max={borderRadiusPer > 0 ? 0 : 100}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<lable for=\"height-value\">%</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\t\tbind:value={bdSideRadiusPerTopRight} \n\t\t\t\t\t\t\t\t\tdisabled={borderRadiusPer > 0 ? disabled : !disabled}\n\t\t\t\t\t\t\t\t\tmin=0 max={borderRadiusPer > 0 ? 0 : 100}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<!-- Bottom-Left -->\n\t\t\t\t\t\t<lable for=\"br-t-l\" id=\"brBL-label\">Bottom-Left</lable>\n\t\t\t\t\t\t<div class:active={active} class=\"border-radius-sides\" id=\"br-b-l\">\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\t\tbind:value={bdSideRadiusPerBottomLeft} \n\t\t\t\t\t\t\t\t\tdisabled={borderRadiusPer > 0 ? disabled : !disabled}\n\t\t\t\t\t\t\t\t\tmin=0 max={borderRadiusPer > 0 ? 0 : 100}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<lable for=\"height-value\">%</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\t\tbind:value={bdSideRadiusPerBottomLeft} \n\t\t\t\t\t\t\t\t\tdisabled={borderRadiusPer > 0 ? disabled : !disabled}\n\t\t\t\t\t\t\t\t\tmin=0 max={borderRadiusPer > 0 ? 0 : 100}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<!-- Bottom-Right -->\n\t\t\t\t\t\t<lable for=\"br-t-l\" id=\"brBR-label\">Bottom-right</lable>\n\t\t\t\t\t\t<div class:active={active} class=\"border-radius-sides\" id=\"br-b-r\">\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\t\tbind:value={bdSideRadiusPerBottomRight} \n\t\t\t\t\t\t\t\t\tdisabled={borderRadiusPer > 0 ? disabled : !disabled}\n\t\t\t\t\t\t\t\t\tmin=0 max={borderRadiusPer > 0 ? 0 : 100}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<lable for=\"height-value\">%</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\t\tbind:value={bdSideRadiusPerBottomRight} \n\t\t\t\t\t\t\t\t\tdisabled={borderRadiusPer > 0 ? disabled : !disabled}\n\t\t\t\t\t\t\t\t\tmin=0 max={borderRadiusPer > 0 ? 0 : 100}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<!-- Color -->\n\t\t<div class:open={!openColor}>\n\t\t\t<div class=\"value-custom color-grid\" id=\"color-value\">\n\n\t\t\t\t<div class=\"openColor\">\n\t\t\t\t\t<div class=\"color-items\">\n\t\t\t\t\t\t<lable class=\"colorLabel\" for=\"colorpicker\" id=\"color-label\">Color</lable>\n\t\t\t\t\t\t<input class=\"picker\" type=\"color\" id=\"colorpicker\" bind:value={color}>\n\t\t\t\t\t\t<p class=\"colorCode\" id=\"color-code\">Hex : <spac style=\"font-weight: 700;\">{color}</spac></p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"openColor\" class:open={!openBorder}>\n\t\t\t\t\t<div class=\"color-items\">\n\t\t\t\t\t\t<lable class=\"colorLabel\" for=\"colorpickerBorder\" id=\"color-border-label\">Border color</lable>\n\t\t\t\t\t\t<input class=\"picker\" type=\"color\" id=\"colorpickerBorder\" bind:value={colorBorder}>\n\t\t\t\t\t\t<p class=\"colorCode\" id=\"color-border-code\">Hex : <spac style=\"font-weight: 700;\">{colorBorder}</spac></p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"openColor\" class:open={!openShadow}>\n\t\t\t\t\t<div class=\"color-items\">\n\t\t\t\t\t\t<lable class=\"colorLabel\" for=\"colorpickerShadow\" id=\"color-shadow-label\">Shadow color</lable>\n\t\t\t\t\t\t<input class=\"picker\" type=\"color\" id=\"colorpickerShadow\" bind:value={colorShadow}>\n\t\t\t\t\t\t<p class=\"colorCode\" id=\"color-shadow-code\">Hex : <spac style=\"font-weight: 700;\">{colorShadow}</spac></p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"openColor\" class:open={!openShadowInset}>\n\t\t\t\t\t<div class=\"color-items\">\n\t\t\t\t\t\t<lable class=\"colorLabel\" for=\"colorpickerShadowIn\" id=\"color-shadow-in-label\">Shadow color (inset)</lable>\n\t\t\t\t\t\t<input class=\"picker\" type=\"color\" id=\"colorpickerShadowIn\" bind:value={colorShadowIn}>\n\t\t\t\t\t\t<p class=\"colorCode\" id=\"color-shadow-in-code\">Hex : <spac style=\"font-weight: 700;\">{colorShadowIn}</spac></p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<!-- box-shadow -->\n\t\t<div class:open={!openShadow}>\n\t\t\t<div class=\"value-custom box-shadow\" id=\"box-shadow\">\n\t\t\t\t<lable for=\"outShadow\" id=\"box-shadow-label\">box-shadow</lable>\n\t\t\t\t<div class=\"value-custom outShadow\">\n\t\t\t\t\t<!-- {h}px {v}px {blur}px {spread}px {color} -->\n\t\t\t\t\t<div class=\"value-custom positionShadow\">\n\t\t\t\t\t\t<lable for=\"hShadow\" class=\"hShadow-label\">Horizontal</lable>\n\t\t\t\t\t\t<div class=\"value-custom hShadow\" >\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\t\tbind:value={hShadow} \n\t\t\t\t\t\t\t\t\tmin=-100 max=100>\n\t\t\t\t\t\t\t<lable for=\"hShadow\">px</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\t\tbind:value={hShadow} \n\t\t\t\t\t\t\t\t\tmin=-100 max=100>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<lable for=\"vShadow\" class=\"vShadow-label\">Vertical</lable>\n\t\t\t\t\t\t<div class=\"value-custom vShadow\" >\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\t\tbind:value={vShadow} \n\t\t\t\t\t\t\t\t\tmin=-100 max=100>\n\t\t\t\t\t\t\t<lable for=\"vShadow\">px</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\t\tbind:value={vShadow} \n\t\t\t\t\t\t\t\t\tmin=-100 max=100>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<lable for=\"bShadow\" class=\"bShadow-label\">Blur</lable>\n\t\t\t\t\t\t<div class=\"value-custom bShadow\" >\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\t\tbind:value={blurShadow} \n\t\t\t\t\t\t\t\t\tmin=0 max=100>\n\t\t\t\t\t\t\t<lable for=\"bShadow\">px</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\t\tbind:value={blurShadow} \n\t\t\t\t\t\t\t\t\tmin=0 max=100>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<lable for=\"sShadow\" class=\"sShadow-label\">Spread</lable>\n\t\t\t\t\t\t<div class=\"value-custom sShadow\" >\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\t\tbind:value={spreadShadow} \n\t\t\t\t\t\t\t\t\tmin=0 max=100>\n\t\t\t\t\t\t\t<lable for=\"sShadow\">px</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\t\tbind:value={spreadShadow} \n\t\t\t\t\t\t\t\t\tmin=0 max=100>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class:open={!openShadowInset}>\n\t\t\t<div class=\"value-custom box-shadow\" id=\"box-shadow-inset\">\n\t\t\t\t<lable for=\"insetShadow\" id=\"box-shadow-inset-label\">box-shadow (inset)</lable>\n\t\t\t\t<div class=\"value-custom insetShadow\">\n\t\t\t\t\t<!-- {h}px {v}px {blur}px {spread}px {color} -->\n\t\t\t\t\t<div class=\"value-custom positionShadow\">\n\t\t\t\t\t\t<lable for=\"hShadow\" class=\"hShadow-label\">Horizontal</lable>\n\t\t\t\t\t\t<div class=\"value-custom hShadow\" >\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\t\tbind:value={hShadowIn} \n\t\t\t\t\t\t\t\t\tmin=-100 max=100>\n\t\t\t\t\t\t\t<lable for=\"hShadow\">px</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\t\tbind:value={hShadowIn} \n\t\t\t\t\t\t\t\t\tmin=-100 max=100>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<lable for=\"vShadow\" class=\"vShadow-label\">Vertical</lable>\n\t\t\t\t\t\t<div class=\"value-custom vShadow\" >\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\t\tbind:value={vShadowIn} \n\t\t\t\t\t\t\t\t\tmin=-100 max=100>\n\t\t\t\t\t\t\t<lable for=\"vShadow\">px</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\t\tbind:value={vShadowIn} \n\t\t\t\t\t\t\t\t\tmin=-100 max=100>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<lable for=\"bShadow\" id=\"bShadow-label\">Blur</lable>\n\t\t\t\t\t\t<div class=\"value-custom bShadow\" >\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\t\tbind:value={blurShadowIn} \n\t\t\t\t\t\t\t\t\tmin=0 max=100>\n\t\t\t\t\t\t\t<lable for=\"bShadow\">px</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\t\tbind:value={blurShadowIn} \n\t\t\t\t\t\t\t\t\tmin=0 max=100>\n\t\t\t\t\t\t</div>\t\n\n\t\t\t\t\t\t<lable for=\"sShadow\" class=\"sShadow-label\">Spread</lable>\n\t\t\t\t\t\t<div class=\"value-custom sShadow\" >\n\t\t\t\t\t\t\t<input class=\"valueShow\" type=\"number\" \n\t\t\t\t\t\t\t\t\tbind:value={spreadShadowIn} \n\t\t\t\t\t\t\t\t\tmin=0 max=100>\n\t\t\t\t\t\t\t<lable for=\"sShadow\">px</lable>\n\t\t\t\t\t\t\t<input class=\"slider\" type=\"range\" \n\t\t\t\t\t\t\t\t\tbind:value={spreadShadowIn} \n\t\t\t\t\t\t\t\t\tmin=0 max=100>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"footer-menu\">\n\t\t\t<button on:click=\"{reset}\" class=\"btn btn-reset\">\n\t\t\t\t<span id=\"reset-icon\" class=\"material-icons-outlined\">delete</span>\n\t\t\t\tReset\n\t\t\t</button>\n\t\t</div>\n\t</div>\n\n\t<h1>Output</h1>\n\t<div class=\"dummy\">\n\t\t<div class=\"dummy-items\" id=\"dummy-size\" \n\t\t\tstyle=\"\twidth: {width}px;\n\t\t\t\t\theight: {height}px;\n\t\t\t\t\tborder-radius: {borderRadius}px;\n\t\t\t\t\tborder-radius: {borderRadiusPer}%;\n\t\t\t\t\tbackground: {color};\n\n\t\t\t\t\tborder-top-left-radius: {bdSideRadiusTopLeft}px;\n\t\t\t\t\tborder-top-right-radius: {bdSideRadiusTopRight}px;\n\t\t\t\t\tborder-bottom-left-radius: {bdSideRadiusBottomLeft}px;\n\t\t\t\t\tborder-bottom-right-radius: {bdSideRadiusBottomRight}px;\n\n\t\t\t\t\tborder-top-left-radius: {bdSideRadiusPerTopLeft}%;\n\t\t\t\t\tborder-top-right-radius: {bdSideRadiusPerTopRight}%;\n\t\t\t\t\tborder-bottom-left-radius: {bdSideRadiusPerBottomLeft}%;\n\t\t\t\t\tborder-bottom-right-radius: {bdSideRadiusPerBottomRight}%;\n\n\t\t\t\t\tborder: {border}px solid {colorBorder};\n\n\t\t\t\t\tbox-shadow: {hShadow}px {vShadow}px {blurShadow}px {spreadShadow}px {colorShadow},\n\t\t\t\t\t\t\t\tinset {hShadowIn}px {vShadowIn}px {blurShadowIn}px {spreadShadowIn}px {colorShadowIn};\n\t\t\t\t\"\n\t\t\t></div>\n\t</div>\n</main>\n<p class=\"myCopyRight\">Made by Thianrawit Phaedsri</p>\n\n<style>\n\t*{\n\t\tbox-sizing: border-box;\n\t}\n\n\t.myCopyRight{\n\t\tposition: sticky;\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\tpadding: 10px;\n\t\tmargin: 5px;\n\t\tfont-size: calc(0.15vw + 0.15vh + 2vmin);\n\t\tfont-weight: lighter;\n\t\tfont-family:-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n\t}\n\n\t.open{\n\t\tdisplay: none;\n\t}\n\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmargin: 0 auto;\n\n\t\tdisplay: grid;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n\n\t}\n\n\tnav{\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tposition: relative;\n\t\tfont-weight: lighter;\n\t\tfont-family:-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n\t}\n\n\tnav .toggle{\n\t\twidth: calc(2vw + 2vh + 2vmin);\n\t\theight: calc(2vw + 2vh + 2vmin);\n\t\tbackground: #353535;\n\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tright: 0;\n\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\n\t\tcursor: pointer;\n\t\tz-index: 999;\n\t}\n\n\tnav .toggle::before{\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\ttop: 35%;\n\n\t\twidth: calc(1vw + 1vh + 2vmin);\n    \theight: calc(0.1vw + 0.1vh + 0.25vmin);\n\t\tbackground: #fff;\n\n\t\ttransition: 0.25s all ease;\n\t}\n\n\tnav .toggle::after{\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\tbottom: 35%;\n\n\t\twidth: calc(1vw + 1vh + 2vmin);\n    \theight: calc(0.1vw + 0.1vh + 0.25vmin);\n\t\tbackground: #fff;\n\t\ttransition: 0.25s all ease;\n\t}\n\n\tnav .toggle.active::before{\n\t\ttransform: rotate(-225deg);\n\t\ttop: 45%;\n\t\ttransition: 0.25s all ease;\n\t}\n\n\tnav .toggle.active::after{\n\t\ttransform: rotate(-135deg);\n\t\ttop: 45%;\n\t\ttransition: 0.25s all ease;\n\t}\n\n\tnav .options{\n\t\twidth: 35%;\n\t\theight: 100%;\n\t\tbackground: rgba(0,0,0,0.45);\n\t\tbackdrop-filter: blur(10px);\n\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tright: -50%;\n\n\t\tz-index: 1;\n\t\ttransition: 0.25s all ease;\n\n\t\tdisplay: grid;\n\t\talign-items: center;\n\t\talign-content: center;\n\t\tjustify-content: center;\n\t\tjustify-items: center;\n\t}\n\n\tnav .options.active{\n\t\ttop: 0;\n\t\tright: 0;\n\t\ttransition: 0.25s all ease;\n\t}\n\n\tnav .navItems{\n\t\tdisplay: grid;\n\t\talign-items: center;\n\t\talign-content: center;\n\t\tjustify-items: center;\n\n\t\tgrid-template-columns: auto;\n\t\tgrid-template-rows: auto;\n\n\t\tmin-width: 135%;\n\t}\n\n\tnav .navMenu label{\n\t\tgrid-area: l;\n\t}\n\n\tnav .navMenu input{\n\t\tgrid-area: i;\n\t}\n\n\tnav .navMenu input[type=checkbox]{\n\t\twidth: calc(0.2vw + 0.2vh + 2vmin);\n\t\theight: calc(0.2vw + 0.2vh + 2vmin);\n\t\tborder: none;\n\t\toutline: none;\n\t\tcursor: pointer;\n\t}\n\n\tnav .navMenu{\n\t\tdisplay: grid;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\n    \twidth: 100%;\n\t\tmargin: 5%;\n\t\tpadding: 5%;\n\n\t\tfont-size: calc(0.1vw + 0.1vh + 2vmin);\n\n\t\tcolor: #eaeff0;\n\n\t\tgrid-template-areas:\n\t\t\"l i\"\n\t\t;\n\t}\n\n\t:global(body){\n\t\tbackground: #efeaf0;\n\t}\n\n\th1 {\n\t\tcolor: #161616;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 2em;\n\t\tfont-weight: 100;\n\t}\n\n\t.btn{\n\t\tpadding: 10px 25px;\n\t\tmargin: 10px;\n\n\t\tbackground: #5a5a5a;\n\t\tcolor: #efeaf0;\n\t\tborder: none;\n\t\tborder-radius: 20px;\n\t\topacity: 0.75;\n\t\ttransition: 0.25s all ease;\n\n\t\tfont-weight: 100;\n\t\tcursor: pointer;\n\t}\n\n\t.btn:hover{\n\t\topacity: 1;\n\t}\n\n\t.make-box{\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tpadding: 10px;\n\t\tmargin: 10px;\n\n\t\tborder-radius: 20px;\n\n\t\tbox-shadow: 10px 10px 20px rgba(0, 0, 0, 0.15),\n\t\t\t\t\t-10px -10px 20px rgba(255, 255, 255, 0.75);\n\t}\n\n\t.make-box{\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tflex-direction: column;\n\t}\n\n\t.value-custom{\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\n\t\tpadding: 10px;\n\t}\n\n\t/*Grid size*/\n\t#w-label{\n\t\tgrid-area: wl;\n\t}\n\t#h-label{\n\t\tgrid-area: hl;\n\t}\n\t#width-value{\n\t\tgrid-area: w;\n\t}\n\t#height-value{\n\t\tgrid-area: h;\n\t}\n\n\t.size-grid{\n\t\tdisplay: grid;\n\t\tgrid-template-columns: auto;\n\t\tgrid-template-rows: auto;\n\t\tgrid-template-areas:\n\t\t'wl hl'\n\t\t'w h';\n\n\t\tmargin: 10px;\n\t\tpadding: 10px;\n\n\t\tjustify-items: center;\n    \talign-content: center;\n\t}\n\t/**************************************/\n\n\t/*Grid size*/\n\n\t.colorLabel{\n\t\tgrid-area: cl;\n\t}\n\t.picker{\n\t\tgrid-area: p;\n\t\twidth: 5em;\n\t\theight: 3em;\n\t}\n\t.colorCode{\n\t\tgrid-area: cc;\n\t}\n\n\t.color-items{\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 10em;\n\t\tgrid-template-rows: 25% 50% 25%;\n\t\tgrid-template-areas:\n\t\t\"cl\"\n\t\t\"p\"\n\t\t\"cc\";\n\n\t\tpadding: 10px;\n\n\t\tjustify-items: center;\n    \talign-content: center;\n\t}\n\n\t.color-grid{\n\t\tdisplay: grid;\n\t\tgrid-template-columns: auto auto;\n\t\tgrid-template-rows: auto;\n\t\tgrid-gap: 10%;\n\t\t\n\t\tmargin: 10px 10px 20px;\n\t\tpadding: 10px;\n\n\t\tjustify-items: center;\n    \talign-content: center;\n\t}\n\t/**************************************/\n\n\t#size-value{\n\t\tflex-direction: row;\n\t}\n\n\t.valueShow{\n\t\theight: 35px;\n\t\tborder-radius: 20px;\n\t\ttext-align: center;\n\t\toutline: none;\n\t\tborder: none;\n\n\t\tbackground: #efefef;\n\t\tbox-shadow: inset 5px 5px 5px rgba(0, 0, 0, 0.1),\n\t\t\t\t\tinset -5px -5px 5px rgba(255, 255, 255, 0.95);\n\t}\n\n\t.slider {\n\t\t-webkit-appearance: none;\n\t\twidth: 100%;\n\t\theight: 25px;\n\t\tborder-radius: 20px;\n\n\t\tbackground: #efefef;\n\t\tbox-shadow: inset 5px 5px 5px rgba(0, 0, 0, 0.1),\n\t\t\t\t\tinset -5px -5px 5px rgba(255, 255, 255, 0.95);\n\t\t\n\t\toverflow: hidden;\n\t\tborder: none;\n\t\toutline: none;\n\t\topacity: 0.7;\n\t\t-webkit-transition: .2s;\n\t\ttransition: 0.25s all ease;\n\t}\n\n\t.slider:hover {\n\t\topacity: 1;\n\t}\n\n\t.slider::-webkit-slider-thumb {\n\t\t-webkit-appearance: none;\n\t\tappearance: none;\n\t\twidth: 25px;\n\t\theight: 25px;\n\t\tborder-radius: 20px;\n\t\tbackground: #5a5a5a;\n\t\tbox-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);\n\t\tcursor: pointer;\n\t}\n\n\t.picker{\n\t\tborder: none;\n\t\toutline: none;\n\n\t}\n\n\tinput{\n\t\tmargin: 10px;\n\t}\n\n\t.border-radius-items label{\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\t/*Toggle Border-radius*/\n\t.border-radius-items#br-px{\n\t\tdisplay: block;\n\t}\n\n\t.border-radius-items#br-per{\n\t\tdisplay: none;\n\t}\n\n\t.border-radius-items#br-px.active{\n\t\tdisplay: none;\n\t}\n\n\t.border-radius-items#br-per.active{\n\t\tdisplay: block;\n\t}\n\t/**************************************/\n\n\t/* Grid border-radius sides */\n\t#brTL-label{\n\t\tgrid-area: tl;\n\t\tfont-size: 14px;\n\t}\n\t#br-t-l{\n\t\tgrid-area: TL;\n\t}\n\n\t#brTR-label{\n\t\tgrid-area: tr;\n\t\tfont-size: 14px;\n\t}\n\t#br-t-r{\n\t\tgrid-area: TR;\n\t}\n\n\t#brBL-label{\n\t\tgrid-area: bl;\n\t\tfont-size: 14px;\n\t}\n\t#br-b-l{\n\t\tgrid-area: BL;\n\t}\n\n\t#brBR-label{\n\t\tgrid-area: br;\n\t\tfont-size: 14px;\n\t}\n\t#br-b-r{\n\t\tgrid-area: BR;\n\t}\n\n\t.border-radius-sides{\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\t.br-sides-toggle#br-sides-px{\n\t\tdisplay: block;\n\t}\n\t.br-sides-toggle#br-sides-per{\n\t\tdisplay: none;\n\t}\n\t.br-sides-toggle#br-sides-px.active{\n\t\tdisplay: none;\n\t}\n\t.br-sides-toggle#br-sides-per.active{\n\t\tdisplay: block;\n\t}\n\n\t.br-sides-grid{\n\t\tdisplay: grid;\n\t\tgrid-template-columns: auto;\n\t\tgrid-template-rows: auto;\n\t\tgrid-row-gap: 10px;\n\n\t\tgrid-template-areas:\n\t\t'tl tr'\n\t\t'TL TR'\n\t\t'bl br'\n\t\t'BL BR';\n\t\t\n\t\tmargin: 0 0 20px 0;\n\t\tpadding: 10px;\n\n\t\tjustify-items: center;\n    \talign-content: center;\n\t}\n\n\t/* Border */\n\n\t#border-radius{\n\t\tdisplay: grid;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tjustify-items: center;\n\n\t\tgrid-template-columns: auto;\n\t\tgrid-template-rows: auto;\n\t}\n\n\t#border-label{\n\t\tgrid-area: bl;\n\t}\n\t#border-radius-label{\n\t\tpadding: 10px;\n\t}\n\t#border-custom{\n\t\tgrid-area: bc; \n\t}\n\n\t.border-grid{\n\t\tdisplay: grid;\n\t\tgrid-template-columns: auto;\n\t\tgrid-template-rows: auto;\n\t\tgrid-row-gap: 10px;\n\n\t\tgrid-template-areas:\n\t\t'bl'\n\t\t'bc';\n\t\t\n\t\tmargin: 10px;\n\t\tpadding: 10px;\n\n\t\tjustify-items: center;\n    \talign-content: center;\n\t}\n\n\t/* Box-shadow */\n\t#box-shadow-label{\n\t\tgrid-area: bl;\n\t}\n\n\t.outShadow{\n\t\tgrid-area: os;\n\n\t\tdisplay: grid;\n\t\tjustify-items: center;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tgrid-template-columns: auto;\n\t\tgrid-template-rows: auto;\n\t}\n\n\t.insetShadow{\n\t\tdisplay: grid;\n\t\tjustify-items: center;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tgrid-template-columns: auto;\n\t\tgrid-template-rows: auto;\n\t}\n\n\t.box-shadow{\n\t\tdisplay: grid;\n\t\tgrid-template-columns: auto;\n\t\tgrid-template-rows: auto;\n\n\t\tgrid-template-areas:\n\t\t\"bl\"\n\t\t\"os\";\n\n\t\tmargin: 10px;\n\t\tpadding: 10px;\n\n\t\tjustify-items: center;\n    \talign-content: center;\n\t}\n\n\t.hShadow{\n\t\tgrid-area: h;\n\t}\n\t.hShadow-label{\n\t\tgrid-area: hl;\n\t}\n\t.vShadow{\n\t\tgrid-area: v;\n\t}\n\t.vShadow-label{\n\t\tgrid-area: vl;\n\t}\n\n\t.bShadow{\n\t\tgrid-area: b;\n\t}\n\t.bShadow-label{\n\t\tgrid-area: bl;\n\t}\n\t.sShadow{\n\t\tgrid-area: s;\n\t}\n\t.sShadow-label{\n\t\tgrid-area: sl;\n\t}\n\n\t.positionShadow{\n\t\tdisplay: grid;\n\t\tgrid-template-columns: auto;\n\t\tgrid-template-rows: auto;\n\n\t\tgrid-template-areas:\n\t\t'hl vl'\n\t\t'h v'\n\t\t'bl sl'\n\t\t'b s';\n\n\t\tmargin: 10px;\n\t\tpadding: 10px;\n\n\t\tjustify-content: center;\n\t\talign-content: center;\n\t}\n\n\t.footer-menu{\n\t\tdisplay: flex;\n\t\twidth: 100%;\n\t\tjustify-content: right;\n\t}\n\n\t.btn-reset{\n\t\tborder: 2px solid #7f7e7f;\n\t\tcolor: #7f7e7f;\n\t\tfont-weight: 700;\n\t\tbackground: transparent;\n\n\t\tdisplay: inline-flex;\n\t\tjustify-self: center;\n\t\talign-items: center;\n\t}\n\n\tspan{\n\t\tpadding: 0 5px;\n\t}\n\n\t.dummy{\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\t.dummy-items{\n\t\tmargin: 10px;\n\t\tbackground: red;\n\t}\n\n\t/*Responsive*/\n\t@media (max-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\n\t\t.size-grid{\n\t\t\tdisplay: grid;\n\t\t\tgrid-template-columns: auto;\n\t\t\tgrid-template-rows: auto;\n\t\t\tgrid-template-areas:\n\t\t\t'wl'\n\t\t\t'w'\n\t\t\t'hl'\n\t\t\t'h';\n\n\t\t\tmargin: 10px;\n\t\t\tpadding: 10px;\n\t\t}\n\n\t\t.br-sides-grid{\n\t\t\tdisplay: grid;\n\t\t\tgrid-template-columns: auto;\n\t\t\tgrid-template-rows: auto;\n\t\t\tgrid-row-gap: 10px;\n\n\t\t\tgrid-template-areas:\n\t\t\t'tl'\n\t\t\t'TL'\n\t\t\t'tr'\n\t\t\t'TR'\n\t\t\t'bl'\n\t\t\t'BL'\n\t\t\t'br'\n\t\t\t'BR';\n\t\t\t\n\t\t\tmargin: 40px 0;\n\t\t\tpadding: 10px;\n\n\t\t\tjustify-items: center;\n\t\t\talign-content: center;\n\t\t}\n\n\t\tnav .options{\n\t\t\tmin-width: 100%;\n\t\t\tmin-height: 100%;\n\n\t\t\tright: -100%;\n\t\t}\n\n\t\tnav .navItems{\n\t\t\tmin-width: 120%;\n\n\t\t\tgrid-template-columns: auto auto;\n\t\t\tgrid-template-rows: auto;\n\t\t}\n\n\t\tnav .navMenu input[type=checkbox]{\n\t\t\twidth: calc(0.5vw + 0.5vh + 2vmin);\n\t\t\theight: calc(0.5vw + 0.5vh + 2vmin);\n\t\t}\n\n\t\tnav .navMenu{\n\t\t\tfont-size: calc(0.5vw + 0.5vh + 2vmin);\n\t\t}\n\n\t\t.positionShadow{\n\t\t\tgrid-template-areas:\n\t\t\t'hl'\n\t\t\t'h'\n\t\t\t'vl'\n\t\t\t'v'\n\t\t\t'bl'\n\t\t\t'b'\n\t\t\t'sl'\n\t\t\t's';\n\t\t}\n\t}\n\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","i","length","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_mount","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","disabled","width","height","borderRadius","borderRadiusPer","toggleLabel","bdSideRadiusTopLeft","bdSideRadiusTopRight","bdSideRadiusBottomLeft","bdSideRadiusBottomRight","bdSideRadiusPerTopLeft","bdSideRadiusPerTopRight","bdSideRadiusPerBottomLeft","bdSideRadiusPerBottomRight","border","color","colorBorder","hShadow","vShadow","blurShadow","spreadShadow","colorShadow","hShadowIn","vShadowIn","blurShadowIn","spreadShadowIn","colorShadowIn","active","activeNav","openSize","openBorder","openBorderRadius","openBorderRadiusPart","openColor","openShadow","openShadowInset","borderLogic","getElementById","onclick","e","id","$destroy","detaching","d","destroy_component","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","body"],"mappings":"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"}